// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "cmd+/",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+u",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new"
  },
  {
    "key": "alt+cmd+j",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "shift+alt+b",
    "command": "-gitlens.toggleCodeLens",
    "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "cmd+b",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "f9",
    "command": "-editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+a",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "alt+cmd+z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "cmd+k z",
    "command": "-workbench.action.toggleZenMode"
  },
  {
    "key": "shift+cmd+v",
    "command": "toggleVim"
  },
  {
    "key": "cmd+.",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "cmd+k cmd+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "cmd+'",
    "command": "workbench.action.selectTheme"
  },
  {
    "key": "cmd+k cmd+t",
    "command": "-workbench.action.selectTheme"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "shift+cmd+\\",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm"
  },
  {
    "key": "cmd+k cmd+\\",
    "command": "-workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "cmd+g cmd+p",
    "command": "git.push"
  },
  {
    "key": "cmd+g cmd+r",
    "command": "git.pull"
  },
  {
    "key": "cmd+g cmd+l",
    "command": "gitlens.toggleLineBlame"
  },
  {
    "key": "cmd+x",
    "command": "-editor.action.clipboardCutAction",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "cmd+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "cmd+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+cmd+p",
    "command": "workbench.actions.view.problems"
  },
  {
    "key": "shift+cmd+m",
    "command": "-workbench.actions.view.problems"
  },
  {
    "key": "shift+cmd+8",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "alt+cmd+c",
    "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "toggleSearchCaseSensitive",
    "when": "searchViewletFocus && searchViewletVisible && !fileMatchOrFolderMatchFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "-toggleSearchCaseSensitive",
    "when": "searchViewletFocus && searchViewletVisible && !fileMatchOrFolderMatchFocus"
  },
  {
    "key": "alt+cmd+enter",
    "command": "-editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "cmd+enter",
    "command": "search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "key": "alt+cmd+enter",
    "command": "-search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "shift+cmd+r",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "h",
    "command": "breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "left",
    "command": "-breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "j",
    "command": "breadcrumbs.selectFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "down",
    "command": "-breadcrumbs.selectFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "l",
    "command": "breadcrumbs.focusNext",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "right",
    "command": "-breadcrumbs.focusNext",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "alt+cmd+o",
    "command": "workbench.action.output.toggleOutput"
  },
  {
    "key": "shift+cmd+u",
    "command": "-workbench.action.output.toggleOutput"
  },
  {
    "key": "alt+cmd+i",
    "command": "workbench.debug.action.toggleRepl"
  },
  {
    "key": "shift+cmd+y",
    "command": "-workbench.debug.action.toggleRepl"
  },
  {
    "key": "shift+cmd+o",
    "command": "workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "cmd+k r",
    "command": "-workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "shift+cmd+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "shift+cmd+'",
    "command": "editor.togglequotes"
  },
  {
    "key": "cmd+'",
    "command": "-editor.togglequotes"
  },
  {
    "key": "shift+cmd+y",
    "command": "extension.jumpy-word"
  },
  {
    "key": "shift+cmd+s",
    "command": "surround.with",
    "when": "editorHasSelection"
  },
  {
    "key": "shift+cmd+t",
    "command": "-surround.with",
    "when": "editorHasSelection"
  },
  {
    "key": "shift+cmd+t",
    "command": "extension.translateText"
  },
  {
    "key": "shift+cmd+i",
    "command": "carbon.show"
  },
  {
    "key": "alt+cmd+a",
    "command": "-carbon.show"
  },
  {
    "key": "shift+cmd+y",
    "command": "spotify.toggleShuffling"
  },
  {
    "key": "shift+cmd+7",
    "command": "vscode-spotify-playlists.focus"
  },
  {
    "key": "shift+cmd+8",
    "command": "vscode-spotify-tracks.focus"
  },
  {
    "key": "shift+cmd+9",
    "command": "spotify.lyrics"
  },
  {
    "key": "cmd+g cmd+i",
    "command": "git.ignore"
  },
  {
    "key": "cmd+g cmd+c",
    "command": "git.checkout"
  },
  {
    "key": "cmd+g cmd+b",
    "command": "git.branch"
  },
  {
    "key": "cmd+g cmd+o",
    "command": "git.openChange"
  },
  {
    "key": "cmd+g cmd+n",
    "command": "git.stash"
  },
  {
    "key": "cmd+g cmd+m",
    "command": "git.stashPop"
  },
  {
    "key": "cmd+g cmd+t",
    "command": "git.createTag"
  },
  {
    "key": "shift+cmd+u",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+cmd+-",
    "command": "extension.startPomodoro"
  },
  {
    "key": "shift+cmd+=",
    "command": "extension.resetPomodoro"
  },
  {
    "key": "shift+cmd+c",
    "command": "search.action.collapseSearchResults"
  },
  {
    "key": "shift+cmd+c",
    "command": "workbench.files.action.collapseExplorerFolders"
  },
  {
    "key": "ctrl+cmd+]",
    "command": "-spotify.next"
  },
  {
    "key": "ctrl+cmd+[",
    "command": "-spotify.previous"
  },
  {
    "key": "cmd+l",
    "command": "cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+right",
    "command": "-cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+h",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "left",
    "command": "-cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+h",
    "command": "cursorLineStart",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+a",
    "command": "-cursorLineStart",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+;",
    "command": "emoji.indertEmoji"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "-editor.action.defineKeybinding",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "-keybindings.editor.defineKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "shift+cmd+2",
    "command": "workbench.action.toggleMaximizedPanel",
  },
  {
    "key": "shift+cmd+;",
    "command": "-spotify.volumeDown"
  },
  {
    "key": "shift+cmd+'",
    "command": "-spotify.volumeUp"
  },
  {
    "key": "shift+cmd+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "cmd+h",
    "command": "editor.action.openDeclarationToTheSide"
  },
  {
    "key": "shift+cmd+l",
    "command": "explorer.openToSide",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "-explorer.openToSide",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "l",
    "command": "list.expandSelectionDown",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "shift+down",
    "command": "-list.expandSelectionDown",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "l",
    "command": "list.expand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "right",
    "command": "-list.expand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "cmd+l",
    "command": "list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "l",
    "command": "-list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+cmd+,",
    "command": "workbench.action.openSettingsJson",
  },
  {
    "key": "shift+cmd+.",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },
  {
    "key": "alt+cmd+[",
    "command": "-editor.fold",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+space",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
]