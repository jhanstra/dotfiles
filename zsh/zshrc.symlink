# not sure exactly what this is doing but it's outputting annoying things
# find $ZSH/bin -type f -exec chmod 755 {} \;

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts. This is where $ZSH and $PROJ
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit -u

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

# set up fasd for easy file navigation
eval "$(fasd --init auto)"

unset config_files

export NVM_DIR="/Users/jhanstra/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

export PATH="$HOME/.yarn/bin:$PATH"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# for fzf and ripgrep, from https://medium.com/@crashybang/supercharge-vim-with-fzf-and-ripgrep-d4661fc853d2
# --files: List files that would be searched but do not search
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (ignore .git)
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'


# indeed specific configuration

# Single-brace syntax because this is required in bash and sh alike
# if [ -e "$HOME/env/etc/indeedrc" ]; then
#     . "$HOME/env/etc/indeedrc"
# fi

eval "$(rbenv init -)"

# Indeed Stuff - not sure what it does
# export INDEED_PROJECT_DIR='/Users/jhanstra/indeed'
# # BEGIN env Setup -- Managed by Ansible DO NOT EDIT.

# # Single-brace syntax because this is required in bash and sh alike
# if [ -e "$HOME/env/etc/indeedrc" ]; then
#     . "$HOME/env/etc/indeedrc"
# fi
# # END env Setup -- Managed by Ansible DO NOT EDIT.

# From Brian Han. Should use the node version specified in an .nvmrc file in a project.
# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc